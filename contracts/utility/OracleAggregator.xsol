// SPDX-License-Identifier: MIT
pragma solidity ^0.6.12;

// 3rd-party library imports
import { Chainlink, ChainlinkClient } from "@chainlink/contracts/src/v0.6/ChainlinkClient.sol";
import { AggregatorV3Interface } from "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol";

// 1st-party project imports
import { JobInfo } from "../DataStructures.sol";

contract OracleAggregator is ChainlinkClient {
  JobInfo[] jobs;

  function addJob(
    bytes32 _jobId,
    address _cbAddress,
    bytes4 _cbSignature,
    address _oracleAddress,
    uint256 _fee
  ) public {
    JobInfo storage job = jobs[jobs.length - 1];

    job.jobId = _jobId;
    job.cbAddress = _cbAddress;
    job.cbSignature = _cbSignature;
    job.oracleAddress = _oracleAddress;
    job.fee = _fee;
  }

  function executeAll() public {
    for (uint i = 0; i < jobs.length; i++) {
      JobInfo memory job = jobs[i];
      Chainlink.Request memory req = buildChainlinkRequest(job.jobId, job.cbAddress, job.cbSignature);
      sendChainlinkRequestTo(job.oracleAddress, req, job.fee);
    }
  }
}
